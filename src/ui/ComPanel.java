/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import Parser.Parser;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.City;
import model.Com;
import model.Doc;
import model.DocDir;
import model.HeadClass;
import model.Hosp;
import model.HospDir;
import model.House;
import model.Pat;
import model.PatDir;
import model.Person;
import model.PersonDir;

/**
 *
 * @author kalindjoshi
 */
public class ComPanel extends javax.swing.JPanel {

    /**
     * Creates new form ComPanel
     */
    
    String[] comList;
    PatDir patDir;
    Hosp newHosp;
    City city;
    HospDir hospDir;
    HeadClass headclass;
    DefaultTableModel hospTableModel;
    DefaultTableModel houseTableModel;
    DefaultTableModel manageDocModel;
    DefaultTableModel managePerModel;
    Hosp hosp;
    PersonDir personDir;
    Hosp selectHosp;
    Person selectPer;
    DocDir docDir;
    Com com;
    House house;
    boolean comAdminLogIn;
    String selectCom;
    Parser parser = new Parser();
    
    public ComPanel() {
        initComponents();
    }
    
    public ComPanel(City city, String[] communityList, PatDir patientDirectory, HospDir hospitalDirectory, PersonDir personDirectory, DocDir doctorDirectory) 
    {
        initComponents();
        this.comList = communityList;
        this.city = city;
        this.patDir = patientDirectory;
        this.hospDir = hospitalDirectory;
        this.docDir = doctorDirectory;
        this.personDir = personDirectory;
        
        ComLogin.setVisible(true);
        
        ArrayList<Integer> hospNumbers = new ArrayList<Integer>();
        for(Com c: city.getComList()){
            for(Hosp h: c.getHospitalList()){
                hospNumbers.add(h.getHospNum());
            }
        }
        hospitalNumbers.removeAllItems();
        for(int s: hospNumbers){
            hospitalNumbers.addItem(String.valueOf(s));
        }
        communityDropbox.removeAllItems();
        for(Com c: city.getComList()){
            communityDropbox.addItem(c.getComName());
        }
        selectCom = String.valueOf(communityDropbox.getSelectedItem());
        manageDocModel = (DefaultTableModel) manageDoctorTable.getModel();
        managePerModel = (DefaultTableModel) managePersonTable.getModel();
        hospTableModel = (DefaultTableModel) hospitalTable.getModel();
        houseTableModel = (DefaultTableModel) houseTable.getModel();
        populateManageTable();
        populateHospitalTable();
        populateHouseTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ComLogin = new javax.swing.JPanel();
        communityAdminIDText = new javax.swing.JLabel();
        communityAdminIDField = new javax.swing.JTextField();
        communityAdminPasswordField = new javax.swing.JTextField();
        communityAdminPasswordText = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        ComAdmin = new javax.swing.JPanel();
        communityDropbox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        createHospitalButton = new javax.swing.JButton();
        hospitalUpdateFieldText = new javax.swing.JTextField();
        updateHospital = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        houseTable = new javax.swing.JTable();
        createHouseButton = new javax.swing.JButton();
        houseUpdateFieldText = new javax.swing.JTextField();
        updateHouse = new javax.swing.JButton();
        manageDoctor = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        StreetBox = new javax.swing.JLabel();
        HouseFil = new javax.swing.JComboBox<>();
        manageDoc = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        manageDoctorTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        managePersonTable = new javax.swing.JTable();
        assignDoctor = new javax.swing.JButton();
        hospitalNumbers = new javax.swing.JComboBox<>();
        CreateNewHosp = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        createHospitalTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        hospitalNumberInput = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        hospitalStreetNameInput = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        createHospital = new javax.swing.JButton();
        hospCityInp = new javax.swing.JTextField();
        hospComInp = new javax.swing.JTextField();
        CreateNewHouse = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        houseCommunityInput = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        houseCityInput = new javax.swing.JTextField();
        houseUnitNumberInput = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        houseNumberInput = new javax.swing.JTextField();
        createHouse = new javax.swing.JButton();
        houseStreetNameInput = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        createHouseTable = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        ComLogin.setBackground(new java.awt.Color(204, 204, 255));

        communityAdminIDText.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        communityAdminIDText.setText(" Admin ID:");

        communityAdminPasswordText.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        communityAdminPasswordText.setText("Password:");

        loginButton.setBackground(new java.awt.Color(102, 255, 102));
        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ComLoginLayout = new javax.swing.GroupLayout(ComLogin);
        ComLogin.setLayout(ComLoginLayout);
        ComLoginLayout.setHorizontalGroup(
            ComLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComLoginLayout.createSequentialGroup()
                .addGroup(ComLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ComLoginLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(communityAdminPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ComLoginLayout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(communityAdminIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(ComLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(communityAdminIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(communityAdminPasswordField)
                    .addComponent(loginButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
        );
        ComLoginLayout.setVerticalGroup(
            ComLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComLoginLayout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addGroup(ComLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(communityAdminIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(communityAdminIDText))
                .addGap(18, 18, 18)
                .addGroup(ComLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(communityAdminPasswordText)
                    .addComponent(communityAdminPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(loginButton)
                .addContainerGap(316, Short.MAX_VALUE))
        );

        add(ComLogin, "card2");

        ComAdmin.setBackground(new java.awt.Color(204, 204, 255));

        communityDropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Communities:");

        hospitalTable.setBackground(new java.awt.Color(255, 204, 204));
        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hosp No", "StreetName", "Community", "City", "Doctors"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(hospitalTable);

        createHospitalButton.setBackground(new java.awt.Color(102, 255, 102));
        createHospitalButton.setText("Add new hospital");
        createHospitalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHospitalButtonActionPerformed(evt);
            }
        });

        updateHospital.setText("Update");
        updateHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHospitalActionPerformed(evt);
            }
        });

        houseTable.setBackground(new java.awt.Color(255, 204, 204));
        houseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "House No", "House Unit No", "Street Name", "Community", "City", "Person Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(houseTable);

        createHouseButton.setBackground(new java.awt.Color(102, 255, 102));
        createHouseButton.setText("Add new house");
        createHouseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHouseButtonActionPerformed(evt);
            }
        });

        updateHouse.setText("Update");
        updateHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateHouseActionPerformed(evt);
            }
        });

        manageDoctor.setText("Manage Doctor");
        manageDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageDoctorActionPerformed(evt);
            }
        });

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        StreetBox.setText("StreetName");

        HouseFil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout ComAdminLayout = new javax.swing.GroupLayout(ComAdmin);
        ComAdmin.setLayout(ComAdminLayout);
        ComAdminLayout.setHorizontalGroup(
            ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ComAdminLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ComAdminLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(communityDropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ComAdminLayout.createSequentialGroup()
                        .addComponent(manageDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
            .addGroup(ComAdminLayout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HouseFil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StreetBox))
                .addContainerGap(280, Short.MAX_VALUE))
            .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ComAdminLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1)
                        .addComponent(jScrollPane4)
                        .addGroup(ComAdminLayout.createSequentialGroup()
                            .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(ComAdminLayout.createSequentialGroup()
                                    .addComponent(createHospitalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(128, 128, 128)
                                    .addComponent(hospitalUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(updateHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ComAdminLayout.createSequentialGroup()
                                    .addComponent(createHouseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(128, 128, 128)
                                    .addComponent(houseUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(updateHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(0, 4, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ComAdminLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        ComAdminLayout.setVerticalGroup(
            ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ComAdminLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(communityDropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(200, 200, 200)
                .addComponent(StreetBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                .addComponent(HouseFil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(manageDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
            .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(ComAdminLayout.createSequentialGroup()
                    .addGap(98, 98, 98)
                    .addComponent(searchButton)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(createHospitalButton)
                        .addComponent(hospitalUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateHospital))
                    .addGap(40, 40, 40)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(ComAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(createHouseButton)
                        .addComponent(houseUpdateFieldText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateHouse))
                    .addContainerGap(103, Short.MAX_VALUE)))
        );

        add(ComAdmin, "card3");

        manageDoc.setBackground(new java.awt.Color(204, 204, 255));

        manageDoctorTable.setBackground(new java.awt.Color(255, 204, 204));
        manageDoctorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Doctor ID", "Name", "Age", "Community", "Mob No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(manageDoctorTable);

        managePersonTable.setBackground(new java.awt.Color(255, 204, 204));
        managePersonTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "BirthDate", "Community", "Mob No"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(managePersonTable);

        assignDoctor.setText("Assign Doctor");
        assignDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignDoctorActionPerformed(evt);
            }
        });

        hospitalNumbers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout manageDocLayout = new javax.swing.GroupLayout(manageDoc);
        manageDoc.setLayout(manageDocLayout);
        manageDocLayout.setHorizontalGroup(
            manageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDocLayout.createSequentialGroup()
                .addGroup(manageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manageDocLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(manageDocLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(assignDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hospitalNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(manageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(manageDocLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(25, Short.MAX_VALUE)))
        );
        manageDocLayout.setVerticalGroup(
            manageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manageDocLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                .addGroup(manageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospitalNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(assignDoctor))
                .addGap(60, 60, 60))
            .addGroup(manageDocLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(manageDocLayout.createSequentialGroup()
                    .addGap(293, 293, 293)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(167, Short.MAX_VALUE)))
        );

        add(manageDoc, "card4");

        CreateNewHosp.setBackground(new java.awt.Color(204, 204, 255));

        createHospitalTable.setBackground(new java.awt.Color(255, 204, 204));
        createHospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hosp No", "Street Name", "Community", "City", "Doctors"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        createHospitalTable.setPreferredSize(new java.awt.Dimension(580, 80));
        jScrollPane5.setViewportView(createHospitalTable);

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel14.setText("Hosp No");

        hospitalNumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalNumberInputActionPerformed(evt);
            }
        });

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel18.setText("Street Name:");

        hospitalStreetNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalStreetNameInputActionPerformed(evt);
            }
        });

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel17.setText("Community:");

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel16.setText("City:");

        createHospital.setText("Create");
        createHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHospitalActionPerformed(evt);
            }
        });

        hospCityInp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospCityInpActionPerformed(evt);
            }
        });

        hospComInp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospComInpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateNewHospLayout = new javax.swing.GroupLayout(CreateNewHosp);
        CreateNewHosp.setLayout(CreateNewHospLayout);
        CreateNewHospLayout.setHorizontalGroup(
            CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateNewHospLayout.createSequentialGroup()
                .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateNewHospLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE))
                    .addGroup(CreateNewHospLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CreateNewHospLayout.createSequentialGroup()
                                .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hospitalNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hospitalStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE))
                            .addGroup(CreateNewHospLayout.createSequentialGroup()
                                .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hospComInp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hospCityInp, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(createHospital, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        CreateNewHospLayout.setVerticalGroup(
            CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateNewHospLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(hospitalNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(hospitalStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(hospComInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(CreateNewHospLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hospCityInp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addComponent(createHospital)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        add(CreateNewHosp, "card5");

        CreateNewHouse.setBackground(new java.awt.Color(204, 204, 255));

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel19.setText("House Number:");

        houseCommunityInput.setEditable(false);
        houseCommunityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseCommunityInputActionPerformed(evt);
            }
        });

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel22.setText("City:");

        houseCityInput.setEditable(false);
        houseCityInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseCityInputActionPerformed(evt);
            }
        });

        houseUnitNumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseUnitNumberInputActionPerformed(evt);
            }
        });

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel24.setText("House Unit Number:");

        houseNumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseNumberInputActionPerformed(evt);
            }
        });

        createHouse.setBackground(new java.awt.Color(102, 255, 102));
        createHouse.setText("Create");
        createHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createHouseActionPerformed(evt);
            }
        });

        houseStreetNameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                houseStreetNameInputActionPerformed(evt);
            }
        });

        createHouseTable.setBackground(new java.awt.Color(255, 204, 204));
        createHouseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "House No", "House Unit No", "Street Name", "Community", "City", "Person"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(createHouseTable);

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel21.setText("Community:");

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel20.setText("Street Name:");

        javax.swing.GroupLayout CreateNewHouseLayout = new javax.swing.GroupLayout(CreateNewHouse);
        CreateNewHouse.setLayout(CreateNewHouseLayout);
        CreateNewHouseLayout.setHorizontalGroup(
            CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateNewHouseLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateNewHouseLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(createHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(CreateNewHouseLayout.createSequentialGroup()
                                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(houseNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(houseStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(houseCommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(houseCityInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(houseUnitNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(230, 230, 230))
                    .addGroup(CreateNewHouseLayout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())))
        );
        CreateNewHouseLayout.setVerticalGroup(
            CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateNewHouseLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(houseNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(houseUnitNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(houseStreetNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(houseCommunityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateNewHouseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(houseCityInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(37, 37, 37)
                .addComponent(createHouse)
                .addGap(176, 176, 176))
        );

        add(CreateNewHouse, "card6");
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        // TODO add your handling code here:
        if(parser.isLong(communityAdminIDField.getText()) && !parser.checkNull(communityAdminIDField.getText())){
            long communityAdminIDCred = Long.parseLong(communityAdminIDField.getText());
            if(!parser.checkNull(communityAdminPasswordField.getText())){
                String communityAdminPassCred = String.valueOf(communityAdminPasswordField.getText());
                long cAIC = Long.parseLong("123");
                String cAPC = "Comad123";

                if(cAIC == communityAdminIDCred && (cAPC == null ? communityAdminPassCred == null : String.valueOf(cAPC).equals(communityAdminPassCred))){
                    comAdminLogIn = true;
                }
                if(comAdminLogIn){
                    ComLogin.setVisible(false);
                    ComAdmin.setVisible(true);
                }
                else{
                    JOptionPane.showMessageDialog(this, "Login to go ahead");
                }
            }
            else{
                JOptionPane.showMessageDialog(this, "Password cannot not be empty");
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "PatientID should be int and not empty");
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void createHospitalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHospitalButtonActionPerformed
        // TODO add your handling code here:
        ComAdmin.setVisible(false);
        CreateNewHosp.setVisible(true);
        populateHospitalTable();
    }//GEN-LAST:event_createHospitalButtonActionPerformed

    private void updateHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHospitalActionPerformed
        // TODO add your handling code here:

        if(hospitalTable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "");
        }
        else{
            int hospitalID = (int)hospTableModel.getValueAt(hospitalTable.getSelectedRow(), 0);
            String houseInpUpdate = hospitalUpdateFieldText.getText().toString();
            for(Com c: city.getComList()){
                for(Hosp h: c.getHospitalList()){
                    if(hospitalID == h.getHospNum()){
                        hosp = h;
                    }
                }
            }
            String hospitalUpdateFilter = StreetBox.getText().toString();
            String hospUpdate = houseInpUpdate;
            hosp.setStreetName(hospUpdate);
            populateHospitalTable();
        }
    }//GEN-LAST:event_updateHospitalActionPerformed

    private void createHouseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHouseButtonActionPerformed
        // TODO add your handling code here:
        ComAdmin.setVisible(false);
        CreateNewHouse.setVisible(true);
        populateHouseTable();
    }//GEN-LAST:event_createHouseButtonActionPerformed

    private void updateHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateHouseActionPerformed
        // TODO add your handling code here:

        if(houseTable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "");
        }
        else{
            int houseID = (int)houseTableModel.getValueAt(houseTable.getSelectedRow(), 0);
            String houseInpUpdate = houseUpdateFieldText.getText().toString();
            for(Com c: city.getComList()){
                for(House h: c.getHouseList()){
                    if(houseID == h.getHouseNum()){
                        house = h;
                    }
                }
            }
            String houseUpdateFilter = HouseFil.getSelectedItem().toString();
            if(houseUpdateFilter == " "){
                JOptionPane.showMessageDialog(this, "");
            }
            else{
                if(houseUpdateFilter == "houseUnitNumber"){
                    int houseUpdate = Integer.parseInt(houseInpUpdate);
                    house.setHouseNum(houseUpdate);
                    populateHouseTable();
                }
                if(houseUpdateFilter == "StreetName"){
                    String houseUpdate = houseInpUpdate;
                    house.setStreetName(houseUpdate);
                    populateHouseTable();
                }
                
            }
        }
    }//GEN-LAST:event_updateHouseActionPerformed

    private void manageDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageDoctorActionPerformed
        // TODO add your handling code here:
        ComAdmin.setVisible(false);
        manageDoc.setVisible(true);
        populateManageTable();
    }//GEN-LAST:event_manageDoctorActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        selectCom = String.valueOf(communityDropbox.getSelectedItem());
        for(Com c: city.getComList()){
            if(selectCom == c.getComName())
            com = c;
        }
        populateHospitalTable();
        populateHouseTable();
        hospComInp.setText(com.getComName());
        houseCommunityInput.setText(com.getComName());
        hospCityInp.setText(city.getCityName());
        houseCityInput.setText(city.getCityName());
    }//GEN-LAST:event_searchButtonActionPerformed

    private void assignDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignDoctorActionPerformed
        // TODO add your handling code here:

        if(managePersonTable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(this, "Select a person to add");
        }
        if(hospitalNumbers.getSelectedItem() == null){
            JOptionPane.showMessageDialog(this, "Select a hospital");
        }
        else{
            long personNumber = (long)managePerModel.getValueAt(managePersonTable.getSelectedRow(),3);
            for(Person p : personDir.getPersonList()){
                if(personNumber == p.getMob()){
                    selectPer = p;
                }
            }
            for(Hosp h : hospDir.getHospList()){
                if(Integer.parseInt((String)hospitalNumbers.getSelectedItem()) == h.getHospNum()){
                    selectHosp = h;
                }
            }
            boolean doctorCheck = false;
            for(Pat p: patDir.getPatList()){
                if(p.matchByContact(selectPer.getMob())){
                    JOptionPane.showMessageDialog(this, "A patient cannot become a doctor");
                    doctorCheck = true;
                }
            }
            if(!doctorCheck){
                Doc new_doc = selectHosp.addDoctorToHospital(new Doc(selectPer));
                docDir.addDoc(new_doc);
                JOptionPane.showMessageDialog(this, "Added " + selectPer.getName() + " to Hospital");
                doctorCheck = false;
            }
        }
        populateManageTable();
    }//GEN-LAST:event_assignDoctorActionPerformed

    private void hospitalNumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalNumberInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalNumberInputActionPerformed

    private void hospitalStreetNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalStreetNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalStreetNameInputActionPerformed

    private void createHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHospitalActionPerformed
        // TODO add your handling code here:
        boolean hospitalNumberCheck = false;
        int hospitalNumberCreate = Integer.parseInt(hospitalNumberInput.getText());
        for (Hosp h: com.getHospitalList()){
            if(h.getHospNum() == hospitalNumberCreate){
                JOptionPane.showMessageDialog(this,"The hospital already exists");
                hospitalNumberCheck = true;
            }
        }
        if(!hospitalNumberCheck){
            String hospitalStreetNameCreate = hospitalStreetNameInput.getText();
            String hospitalCommunityCreate = hospComInp.getText();
            String hospitalCityCreate = hospCityInp.getText();
            
            hospDir.createHosp(hospitalNumberCreate, hospitalStreetNameCreate, hospitalCommunityCreate, hospitalCityCreate);
            com.createHospital(hospitalNumberCreate, hospitalStreetNameCreate, hospitalCommunityCreate, hospitalCityCreate);
            populateHospitalTable();

            JOptionPane.showMessageDialog(this,"A new hospital is created with Hospital ID" + hospitalNumberCreate);

            hospitalNumberInput.setText("");
            hospitalStreetNameInput.setText("");
            
            hospComInp.setText("");
            hospCityInp.setText("");
        }
    }//GEN-LAST:event_createHospitalActionPerformed

    private void hospCityInpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospCityInpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospCityInpActionPerformed

    private void hospComInpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospComInpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospComInpActionPerformed

    private void houseCommunityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseCommunityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseCommunityInputActionPerformed

    private void houseCityInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseCityInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseCityInputActionPerformed

    private void houseUnitNumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseUnitNumberInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseUnitNumberInputActionPerformed

    private void houseNumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseNumberInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseNumberInputActionPerformed

    private void createHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createHouseActionPerformed
        // TODO add your handling code here:
        boolean houseNumberCheck = false;
        int houseNumberCreate = Integer.parseInt(houseNumberInput.getText());
        for (House h: com.getHouseList()){
            if(h.getHouseNum() == houseNumberCreate){
                JOptionPane.showMessageDialog(this,"This House Already Exists");
                houseNumberCheck = true;
            }
        }
        if(!houseNumberCheck){
            int houseUnitNumberCreate = Integer.parseInt(houseUnitNumberInput.getText());
            String houseStreetNameCreate = houseStreetNameInput.getText();
            String houseCommunityCreate = houseCommunityInput.getText();
            String houseCityCreate = houseCityInput.getText();
            

            com.createHouse(houseUnitNumberCreate, houseStreetNameCreate, houseCommunityCreate, houseCityCreate);
            populateHouseTable();

            JOptionPane.showMessageDialog(this,"");

            houseNumberInput.setText("");
            houseUnitNumberInput.setText("");
            houseStreetNameInput.setText("");
            
            houseCommunityInput.setText("");
            houseCityInput.setText("");
        }
    }//GEN-LAST:event_createHouseActionPerformed

    private void houseStreetNameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_houseStreetNameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_houseStreetNameInputActionPerformed

    public void populateHospitalTable(){
        hospTableModel.setRowCount(0);
        for(Com c: city.getComList()){
            if(selectCom == c.getComName())
                com = c;
        }
        for(Hosp h: com.getHospitalList()){
            Object[] row = new Object[6];
            row[0] = h.getHospNum();
            row[1] = h.getStreetName();
            
            row[3] = h.getCom();
            row[4] = h.getCity();
            row[5] = (h.getDoctorHosp().size());
            hospTableModel.addRow(row);
        }
    }
    
    public void populateHouseTable(){
        houseTableModel.setRowCount(0);
        for(Com c: city.getComList()){
            if(selectCom == c.getComName())
            com = c;
        }
        for(House h: com.getHouseList()){
            Object[] row = new Object[7];
            row[0] = h.getHouseNum();
            row[1] = h.getHouseNum();
            row[2] = h.getStreetName();
            
            row[4] = h.getCommunity();
            row[5] = h.getCity();
            row[5] = (h.getFamiliyMembers().size());
            houseTableModel.addRow(row);
        }
    }
    
    public void populateManageTable(){
        manageDocModel.setRowCount(0);
        managePerModel.setRowCount(0);
        long[] doctorCountNumber = new long[docDir.getDocList().size()];
        for(int i=0; i<(docDir.getDocList()).size(); i++){
            doctorCountNumber[i] = docDir.getDocList().get(i).getPerson().getMob();
        }
        for (Person p : personDir.getPersonList()) {
            boolean a = true;
            for(long i : doctorCountNumber){
                if(i == p.getMob()){
                    a = false;
                }
            }
            if(a == true){
                Object[] row = new Object[4];
                row[0] = p.getName();
                row[1] = p.getDob();
                row[2] = p.getCom();
                row[3] = p.getMob();
                managePerModel.addRow(row);
                a = true;
            }
        }
        for(Doc d: docDir.getDocList()){
            Object[] row = new Object[5];
            row[0] = d.getDid();
            row[1] = d.getPerson().getName();
            row[2] = d.getPerson().getAge();
            row[3] = d.getPerson().getCom();
            row[4] = d.getPerson().getMob();
            manageDocModel.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ComAdmin;
    private javax.swing.JPanel ComLogin;
    private javax.swing.JPanel CreateNewHosp;
    private javax.swing.JPanel CreateNewHouse;
    private javax.swing.JComboBox<String> HouseFil;
    private javax.swing.JLabel StreetBox;
    private javax.swing.JButton assignDoctor;
    private javax.swing.JTextField communityAdminIDField;
    private javax.swing.JLabel communityAdminIDText;
    private javax.swing.JTextField communityAdminPasswordField;
    private javax.swing.JLabel communityAdminPasswordText;
    private javax.swing.JComboBox<String> communityDropbox;
    private javax.swing.JButton createHospital;
    private javax.swing.JButton createHospitalButton;
    private javax.swing.JTable createHospitalTable;
    private javax.swing.JButton createHouse;
    private javax.swing.JButton createHouseButton;
    private javax.swing.JTable createHouseTable;
    private javax.swing.JTextField hospCityInp;
    private javax.swing.JTextField hospComInp;
    private javax.swing.JTextField hospitalNumberInput;
    private javax.swing.JComboBox<String> hospitalNumbers;
    private javax.swing.JTextField hospitalStreetNameInput;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JTextField hospitalUpdateFieldText;
    private javax.swing.JTextField houseCityInput;
    private javax.swing.JTextField houseCommunityInput;
    private javax.swing.JTextField houseNumberInput;
    private javax.swing.JTextField houseStreetNameInput;
    private javax.swing.JTable houseTable;
    private javax.swing.JTextField houseUnitNumberInput;
    private javax.swing.JTextField houseUpdateFieldText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel manageDoc;
    private javax.swing.JButton manageDoctor;
    private javax.swing.JTable manageDoctorTable;
    private javax.swing.JTable managePersonTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton updateHospital;
    private javax.swing.JButton updateHouse;
    // End of variables declaration//GEN-END:variables
}
